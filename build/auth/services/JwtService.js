"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JwtService = void 0;
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
const crypto_1 = __importDefault(require("crypto"));
const config_1 = __importDefault(require("../../common/config"));
class JwtService {
    static generateToken(permissionLevel) {
        try {
            let refreshId = '123321' + config_1.default.security.jwtSecret;
            let salt = crypto_1.default.randomBytes(16).toString('base64');
            let hash = crypto_1.default.createHmac('sha512', salt).update(refreshId).digest("base64");
            let expiresAt = new Date();
            expiresAt.setHours(expiresAt.getHours() + (config_1.default.security.tokenExpiration / 3600));
            let token = jsonwebtoken_1.default.sign({
                idUsuario: '007',
                email: 'autogenerated@jwt.com',
                permissionLevel: permissionLevel,
                provider: 'email',
                name: 'bond',
                refreshKey: salt
            }, config_1.default.security.jwtSecret);
            let b = Buffer.from(hash);
            let refreshToken = b.toString('base64');
            return `{accessToken: ${token}, refreshToken: ${refreshToken}}`;
        }
        catch (err) {
            throw err;
        }
    }
}
exports.JwtService = JwtService;
